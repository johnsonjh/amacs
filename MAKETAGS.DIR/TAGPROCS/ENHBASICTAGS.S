; -*- Mode: Merlin -*-;; file EnhBasicTags.s; 9/29/87 Stephen Bannasch;; Makes tags out of TERC Enhanced Basic text files.; Labels are found on any lines that start with:;;    'def labelname;; When this happens the following text is entered; into the tag table:;;    labelname!'def*------------------------------------------------------ put defs/maketags.equs_tic = 167 ;single quote_quote = 162 ;double quote_space = 160 ;space_tab = 137 ;tab_cr = 141 ;return_colon = 186 ;colon_leftbracket = 219 ;left bracket_comma = 172 ;comma_control@ = 128 ;control-@*----------------------------------- org UserFuncAddr dsk bin/enhbasictags da Init da IsItLabel? da ShutDownInit rtsShutDown rtsquoteFlag ds 1*-----------------------------------IsItLabel? lda LineBuff ;does line at least contain enuf chars cmp #5 ;'def plus one more char bcc :exit ;if not then there is no label lda #$80 ;getchar forces chars to sta caseState ;all uppercase ldx #0 stx quoteFlag ldy #1 jsr IsItDef? ;does the line start with 'def bne :exit lda #0 ;getchar now allows lowercase sta caseState:whiteloop jsr getchar bcs :exit ;we are past the end of LineBuff jsr WhiteSpace? ;is it white space beq :whiteloop ;then eat some more jsr LabelChar? ;first char must be valid label char bne :exit ;if not exit without making tag sta Tag,y iny:tagloop jsr getchar ;now look for rest of label bcs :done ;we are past the end of LineBuff! jsr LabelChar? ;is it still part of the label bne :done ;if not finsh up sta Tag,y iny bne :tagloop:done ldx #0:endloop lda :suffix,x ;now add the suffix sta Tag,y ;  !'def iny  ;to each label inx cpx #5 bcc :endloop dey sty Tag ;set length of tag string lda #0 ;set zero flag -- tag was found --:exit rts:suffix asc "!'def"*-----------------------------------LabelChar? sta :yes+1 ;set up yes result pha adc #1 sta :no+1 pla cmp #_cr beq :no cmp #_colon beq :no cmp #_leftbracket beq :no cmp #_comma beq :no cmp #_control@ beq :no cmp #_quote beq :toggleQ bit quoteFlag ;if we are in a quoted string label bmi :yes ;then don't end at white space jsr WhiteSpace? ;otherwize whitespace ends the label beq :no:yes cmp #0 ;set equal flag by compare to char itself rts:no cmp #0 ;clear zero flag by compare to char+1 rts:toggleQ pha lda quoteFlag eor #$80 sta quoteFlag pla jmp :yes*-----------------------------------IsItDef? jsr getchar ;is first character a tic cmp #_tic bne :done ;if not then no tag jsr getchar cmp #"D" bne :done jsr getchar cmp #"E" bne :done jsr getchar cmp #"F":done rts*----------------------------------- WhiteSpace? cmp #_space beq :done cmp #_tab:done rts*-----------------------------------getchar cpx LineBuff php bcs :done inx lda LineBuff,x ora #$80 ;set high bit cmp #"_" ;if lowercase bcc :done bit caseState bpl :done cmp #"{" ;if char in range "a".."z" bcs :done cmp #"a" bcc :done sbc #$20 ;then convert to uppercase:done plp  ;return carry set if we are past rts  ;the end of string in LineBuffcaseState dfb 0 ;high-bit set forces uppercase