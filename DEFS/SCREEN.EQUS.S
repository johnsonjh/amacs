;-*- Mode: Merlin -*-;; File: defs/screen.equs;; Window Definitions;WindowLft = $20  ;left edge of windowWindowRgt = $21  ;right edge of windowWindowTop = $22  ;top of windowWindowBot = $23  ;bottom of window;; Cursor Definitions;CH = $24  ;current cursor horizontal, change directly.CV = $25  ;current cursor vertical, call vtab after change.;BASL = $28  ;base screen line address for screen ram.BASH = $29  ;high byte of same.;; Hardware Definitions;IIcLoc = $FBC0 ;if $E0, then using //c.IIcID = $E0;Page1 = $C054 ;enable page 1 for Apple BullShit.Page2 = $C055 ;enable page 2 for Apple BullShit.;HardKey = $C000 ;when minus, keypress available.HardKeyReset = $C010 ;reference this to turn off HardKey.;HardMeta = $C061 ;open apple key on Apple //e,//c.HardHyper = $C062 ;close apple key on Apple //e,//c.;; HardModState on the //gs looks like:;; bit 7: Open Apple Key; bit 6: Close Apple Key; bit 5: Updated without key press. (untyped-key); bit 4: Keypad key-down. *gold-keys*; bit 3: Key Repeat; bit 2: Caps Lock Down; bit 1: Control key down; bit 0: Shift Key;HardModState = $C025 ;modification bits on the //gs.;bit_HardMeta = %10000000bit_HardHyper = %01000000bit_RealKey = %00100000bit_KeypadKey = %00010000bit_KeyRepeat = %00001000bit_CapsLock = %00000100bit_Control = %00000010bit_Shift = %00000001;; These don't really belong here.;RdMainRam = $C002WrMainRam = $C004;RdAltRam = $C003WrAltRam = $C005;RdWhichRam? = $C013 ;minus means AltRam enabled.WrWhichRam? = $C014 ;minus means AltRam enabled.;; The next switch is always enabled.  If it isn't, then; we can't access the alternate RAM bank correctly.  It; controls the actions of Page1, Page2.  Also, Merlin; barfs on the label that we want to use.;;80Store	=	$C001;HardBeep = $C030 ;reference toggles in/out state of speaker.;; Register Definitions;scrny = $1F  ;save for y-reg on output.;; Character Definitions;Return = $8D  ;ASCII Carriage Return character.Space = $A0  ;ASCII Space character.BS = $88  ;ASCII Backspace character.Altmode = $9B  ;the altmode character.Escape = Altmode ;the escape character.AbortChar = $87  ;C-G is abort.HelpChar = $9F  ;C-_.Tab = $89  ;ASCII Tab character.LineFeedChar = $8A  ;ASCII line-feed character.DL = $FF  ;ASCII Rubout character.;ArrowCode = 'a'  ;start of arrow key character coding.LeftArrow = ArrowCodeRightArrow = LeftArrow+1UpArrow = RightArrow+1DownArrow = UpArrow+1;TabInitChar = "|";MetaPfx = $00  ;for prefix character getting routines.CtrlPfx = $01CtrlMetaPfx = $02ArgPfx = $03CtrlXPfx = $04;If80Columns = $01  ;we have 80 column screen now.; do If80Columns;ScreenCols = 80; else;ScreenCols = 40  ;we have 40 columns.; fin;