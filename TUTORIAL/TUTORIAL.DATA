You are looking at the AMACS tutorial.  Type Control-Apple-Z to Exit.If you are a new user, you automatically start this tutorial.AMACS commands generally involve the CONTROL key or the META key. Rather thanwrite out META or CONTROL each time we want you to shift a character, we usethe following abbreviations:C-<char>  means hold down the CONTROL key while typing the character <char>.	  Thus, C-F would be: hold down CONTROL and type F.M-<char>  means hold down one of the apple keys while typing <char>.  You may	  alternately type <ESC>, release it, then type <char>.  Thus, M-F	  would be: hold down an apple key, and type F. (Note: The key	  marked ESC is also referred to as Altmode in this document.)The characters ">>" at the left margin indicate some directions for you tofollow in order to try using a command.  For instance:>>  Now type C-V (View next screen) to move on to the next screen.	(go ahead, do it by depressing the CONTROL key and V together.)	From now on, you'll be expected to do this whenever you finish	reading the screen.Note that there is an overlap when going from screen to screen; this providessome continuity when moving through the file.The first thing that you need to know is how to move around from place toplace in the file.  You already know how to move forward a screen, with C-V. To move backwards a screen, type M-V (depress an apple key and type V, or type<ESC>V if you don't have apple keys).>>  Try typing M-V and then C-V to move back and forth a few times.Summary-------The following commands are useful for viewing screenfuls:	C-V	Move forward one screenful	M-V	Move backward one screenful	C-L	Clear screen and redisplay everything,		putting the text near the cursor at the center.>>  Find the cursor and remember what text is near it.    Now type a C-L.    Find the cursor again and see what text is near it now.BASIC CURSOR CONTROL--------------------Getting from screenful to screenful is useful, but how do you repositionyourself within a given screen to a specific place?  There are several waysthat you can do this.  One way (not the best, but the most basic) is to usethe commands previous, backward, forward, and next.  As you can imagine, thesecommands (which are given to AMACS as C-P, C-B, C-F, and C-N respectively)move the cursor from where it currently is to a new place in the givendirection.  Here, in a more graphical form are the commands:			  Previous line, C-P				  :				  :    Backward, C-B .... Current  cursor  position .... Foward, C-F				  :				  :			    Next line, C-NYou'll probably find it easy to think of these by letter.  P for previous, Nfor next, B for backward, and F for forward.  These are the basic cursorpositioning commands, and you'll be using them ALL the time, so it would be ofgreat benifit to you if you learn them now.>>  Do a few C-N's to bring the cursor down to this line.>>  Move into the line with C-F's and then up with C-P's.    See what what C-P does when the cursor is in the middle of the line.Lines are separated by a single character; a carriage return.  This characteris often represented in text that you read by the characters <cr>, whichstand for Carriage Return.>>  Try to C-B at the beginning of a line.  Do a few more C-B's.    Then do C-F's back to the end of the line and beyond.When you go off the top or bottom of the screen, the text beyond the edge isshifted onto the screen so that your instructions can be carried out whilekeeping the cursor on the screen.>>  Try to move the cursor off the bottom of the screen with C-N and see what    happens.If moving by characters is too slow, you can move by words.  M-F (Meta-F)moves forward a word, and M-B moves back a word.>>  Type a few M-F's and M-B's.  Intersperse them with C-F's and C-B's.Notice the parallel between C-F and C-B on the one hand, and M-F and M-B onthe other.  Very often Meta characters are used for operations related toEnglish text, whereas Control characters operate on the basic textual unitsthat are independent of what you are editing (characters, lines, etc.).  Thereis a similar parallel between lines and sentences: C-A and C-E move to thebeginning or end of a line, and M-A and M-E move to the beginning or end of asentence.>>  Try a couple of C-A's, and then a couple of C-E's.    Try a couple of M-A's, and then a couple of M-E's.See how repeated C-A's do nothing, but repeated M-A'a keep moving farther.  Doyou think that this is right?Two other simple cursor motion commands are M-< (Meta-Less-than), which movesto the beginning of the file, and M-> (Meta-Greater-than), which moves to theend of the file.  You probably don't need to try them, since finding thisspot again will be boring.  If you need the shift key to type a "<" then youmust also use the the shift key to type M-<.  Otherwise, you would be typingM-,.The location of the cursor in the text is also called "Point".  To paraphrase,the cursor shows on the screen where Point is located in the text.Here is a summary of simple moving operations including the word and sentencemoving commands:	C-F	Move forward a character.	C-B	Move backward a character.	M-F	Move forward a word.	M-B	Move backward a word.	C-N	Move to the next line.	C-P	Move to the previous line.	C-A	Move to beginning of line.	C-E	Move to end of line.	M-A	Move back to beginning of sentence.	M-E	Move forward to end of sentence.	M-<	Go to beginning of file.	M->	Go to end of file.>>  Try all of these commands now a few times for practice.    Since the last two will take you away from this screen,    you can come back here with M-V's and C-V's.  The above    list contains the most often used commands.Like many other commands in AMACS, these commands can be given arguments whichcause them to be executed repeatedly.  The way you give a command a repeatcount is by typing C-U and then some digits before you type the command.  Youmay also hold down one of the apple keys while you type the digits.  This canbe easier, but the C-U command is also very convienient because if you justtype C-U without any digits, you still get a repeat count.  (More on thislater.)For instance, C-U 8 C-F moves forward 8 characters.>>  Try giving a suitable argument to C-N or C-P to come as close    as you can to this line in one jump.The only apparent exception to this is the screen moving commands, C-V andM-V.  When given an argument, they scroll the screen up or down by that manylines, rather than screenfuls.  This proves to be much more useful.>>  Try typing C-U 1 C-V now.Did it scroll the screen up by a line?  If you would like to scroll it down,you can give an argument to M-V.MAKING AMACS STOP-----------------If you begin to type an argument of 10, but you accidentally type an argumentof 1000, you probably want to start over again.  You can type a C-G to "throwaway" an argument that you didn't mean to type.  C-G also "aborts" (stops)other things, such as searches, or multi-character commands.>>  Type C-U 100 to make a numeric arg of 100, then type C-G.    Now type C-F.  How many characters does it move?If you have typed an Altmode (the ESC key) by mistake, you can get rid of itwith a C-G.INSERTING AND DELETING----------------------If you want to type text, just do it.  Characters which you can see, such asA, 7, *, etc. are taken by AMACS as text and inserted immediately.  Type<RETURN> to start a new line.You can delete the last character you typed by typing <DELETE>.  Moregenerally, <DELETE> deletes the character immediately before the currentcursor position.>>  Do this now, type a few characters and then delete them by typing    <DELETE> a few times.  Don't worry about this file being changed;    you won't affect the master tutorial.  This is just a copy of it.>>  Now start typing text until you reach the right margin, and keep typing.     When a line of text gets too big for one line on the screen, the line of    text is "continued" onto a second screen line.  The exclamation mark at    the far right edge of the screen indicates a line which has been    continued.>>  Use <DELETE>s to delete the text until the line fits on one screen line    again.  The continuation line goes away.>>  Move the cursor to the start (left margin) of THIS line and type <DELETE>.    This deletes the line separator before the line and merges the line into    the previous line.  The resulting line is too long to fit, which is why it    is a continuation line.>>  Type <RETURN> to insert the line separator again.Remember that most AMACS commands can be given a repeat count; Note that thisincludes characters which insert themselves.>>  Try that now -- type C-U 8 * and see what happens.    Give the <DELETE> command an argument, and delete the *'s.You've now learned the most basic way of typing something in AMACS andcorrecting errors.  You can delete by words or lines as well.  Here is asummary of the delete operations:	<DELETE>	delete the character just before the cursor.	C-D		delete the character under the cursor.	M-<DELETE>	kill the word immediately before the cursor.	M-D		kill the next word after the cursor.	C-K		kill from the cursor position to end of line.	M-K		kill to the end of the current sentence.Notice that <DELETE> and C-D vs M-<DELETE> and M-D extend the parallelstarted by C-F and M-F.  C-K and C-E are like M-K and M-E, sort of, in thatlines are opposite sentences.Now suppose you kill something, and then you decide that you want to get itback?  Well, whenever you kill something bigger than a single character, AMACSsaves it for you.  To yank it back, use C-Y.  Note that you don't have to bein the same place to do a C-Y; this is a good way to move text around.  Alsonote that the difference between "killing" and "deleting" something is thatkilled things can be yanked back, and deleted things cannot.  Generally, thecommands that can destroy a lot of text save it, while the ones that attackonly one character, or nothing but blank lines and spaces, do not save.For instance, type C-N a couple of times to position the cursor at some lineon this screen.>>  Do this now, move the cursor and kill that line with C-K.Note that a single C-K kills the contents of the line, and a second C-K killsthe separator, and makes all of the other lines move up.  If you give C-K arepeat count, it kills that many lines AND the separators that follow them.The text that has just disappeared is saved so that you can retrieve it.  Toretrieve the last killed text and put it where the cursor currently is, typeC-Y.>>  Try it; type C-Y to yank the text back.Think of C-Y as if you were yanking something back that someone took away fromyou.  Notice that if you do several C-K's in a row, the text that is killed isall saved together so that one C-Y will yank all of the lines.>>  Do this now, type C-K several times.Now to retrieve that killed text:>>  Type C-Y.  Then move the cursor down a few lines and type C-Y again.    You now see a way to copy text.What do you do if you have some text you want to yank back, and then you killsomething else?  C-Y will yank the most recent kill;  the previous kill islost.  You should yank the killed text back first, and then do another kill toget rid of the text you don't want.  Of course, you could always kill the textthat you don't want first, and then move to the text that you do want, killit, and yank it back somewhere else.FILES-----In order to make the text you edit permanent, you must put it in a file. Otherwise, it will go away when your session with AMACS ends.  You put yourediting in a file by "visiting" the file.  What visiting means is that you seethe contents of the file on the screen, and, loosely speaking, what you areediting is the file itself.  However, the changes still don't become permanentuntil you "save" the file.  This is so you can have control to avoid leavinga half-changed file around when you don't want to.If you look near the bottom of the screen you will see a line that startswith: "AMACS (Fundamental)  Buffer: Main" and continues with the filename:"AMACS Tutorial...".  This is the name of your own temporary copy of the text of the AMACS tutorial; the file that you are now visiting.  Whateverfile you visit, that file's name will appear in that precise spot.The commands for visiting and saving files are unlike the other commands youhave learned in that they consist of two characters.  They both start with thecharacter Control-X.  There is a whole series of commands that start withControl-X; many of them have to do with files, buffers, and related things,and all of them consist of Control-X followed by some other character.Another thing about the command for visiting a file is that you have to saywhat file name you want.  We say the command "reads an argument from thekeyboard" (in this case, the argument is the name of the file).  After youtype the command:	C-X C-V   (Visit a file)AMACS will ask you for the filename.  You can type C-G if you change yourmind, otherwise just type the name, and then the RETURN key.  After thiscommand, you will see the contents of the file in AMACS.  You can edit thecontents.  When you wish to make the changes permanent, issue the command:	C-X C-S  (Save the file)The files contents will be saved in the file that you are editing.  When theoperation is finished, AMACS prints "Written <filename>".  You should savefairly often so that you will not lose very much work if the system shouldcrash.If you forget to save before visiting a different file, AMACS will remind youthat you made changes and ask you whether to save them.  (If you don't savethem, they will be thrown away; that might be what you want!)  You shouldanswer with a "Y" to save them, or an "N" to throw the changes away.To make a new file, just visit it "as if" it already existed.  Then starttyping in the text.  When you ask to "save" the file, AMACS will really createthe file with the text that you have inserted.  From then on, you can consideryourself to be editing an already existing file.It is not easy for you to try out visiting a file and continue with thetutorial.  So, we recommend that you do this at a later date, while you arereading the chapter in the manual entitled "Basic Editing" which containsinstructions on saving and visiting files.EXTENDING THE COMMAND SET-------------------------There are many more AMACS commands than could conveniently be put on all thecontrol and meta characters.  AMACS gets around this with the X eXtendcommand.  This comes in two flavors:	C-X	Character eXtend.  Followed by one character.	M-X	Named command eXtend.  Followed by a long name.These are commands that are generally useful but are used less than thecommands you have already learned about.  You have already seen two of them;the file commands C-X C-V to Visit and C-X C-S to Save.Named eXtended commands are commands which are used even less frequently, orcommands which are used only in certain modes.  These commands are called"functions".  An example is the function Replace String, which replacesoccurrences of one string with another.  When you type M-X, AMACS prompts youat the bottom of the screen with "M-X", and you should type the name of thefunction you wish to use; in this case, "Replace String".  Just type"repl<ESC>" and AMACS will fill in the rest of the name for you.  This iscalled "completion".  Then you type the string that you want to replace, an<ESC>, the string that you want to replace it with, and <RETURN>.  When the<ESC> is printed, it looks like this "".>>  Move the cursor to the blank line two lines below this one.    Then type M-X repl<ESC>changed<ESC>altered<RETURN>.    Notice how this line changed; you've replaced the word c-h-a-n-g-e-d with    the word "altered" wherever it occurs after the cursor.MODE LINE---------If AMACS sees that you are typing commands slowly it shows them to you at thebottom of the screen in an area called the echo area.  The echo area iscontained in the bottom three lines of the screen.  The line immediatelyabove them is called the MODE LINE.  The mode line says something like:AMACS (Fundamental)  Buffer: Main  File:(AMACS Tutorial)           * -- nn% --This is a very useful "information" line.You already know what the filename means -- it is the file you have visited. What the -- nn% -- means is that nn percent of the file is above the cursor. If the top 0% of the file is above the cursor, it will say "-- Top --", ifthe cursor is in the bottom 100% of the file, it will say "-- Bot --".The star means that you have made changes to the text.  Right after you visitor save a file, there is no star.The part of the mode line right after the "AMACS" is to tell you what modesyou are in.  The default mode is Fundamental, which is what you are in now. It is an example of a "major mode".  There are several major modes in AMACSfor editing different languages and text, such as Merlin mode, Text mode, etc.At any time one and only one major mode is active, and its name can alwaysbe found in the mode line just where "Fundamental" is now.  Each major modemakes a few commands behave differently.  For example, there are commands forcreating comments in a program, and since each programming language has adifferent idea of what a comment should look like, each major mode has toinsert comments differently.  Each major mode is the name of an extendedcommand, which is how you get into the mode.  For example, M-X FundamentalMode is how to get into Fundamental mode.If you are going to be editing English text, such as this file, you shouldprobably use Text Mode.>>  Type M-X Text Mode<RETURN>Don't worry, none of the commands you have learned changes AMACS in any greatway.  But since you are going to edit English text, AMACS added something elseto the mode line; Fill.  The "Fill" after the "Text" is not the name of amajor mode, it is part of the name of a "minor" mode: Auto Fill mode.  Minormodes aren't alternatives to the major modes, just minor modifications ofthem.  Each minor mode can be turned on or off by itself, regardless of whatmajor mode you are in, and regardless of the other minor modes.  So you canuse no minor modes, or one minor mode, or any combination of several minormodes.One minor mode which is very useful, especially for editing English text, isAuto Fill mode.  When this mode is on, AMACS breaks the line in between wordsautomatically whenever the line gets too long.  You can turn this mode on oroff by typing C-X C-A.  When the mode is on, you turn it off by doing C-XC-A. If the mode is off, you turn it on by typing another C-X C-A.  This iscalled "toggling".>>  Insert a line of "asdf" over and over again until you see it divide into    two lines.  You must put in spaces between them because Auto Fill breaks    lines only at spaces.The margin is usually set at 78 characters, (or "column" 78), but you canchange it with the C-X F command.  You can also give the margin setting youwant as a numeric argument.>>  Type C-X F with an argument of 20. (C-U 20 C-X F).    Then type in some text and see AMACS fill lines of 20    characters with it.  Then set the margin back to 78 using    C-X F again.SEARCHING---------AMACS can do searches for a string (these are groups of contiguous charactersor words) either forward through the file or backward through it.  To searchfor the string means that you are trying to locate it somewhere in the fileand have AMACS show you where the occurrences of the string exist.  This typeof search is somewhat different from what you may be familiar with.  It is asearch that is performed as you type in the thing to search for.  The commandto initiate a search is C-S for forward search, and C-R for reverse search. BUT WAIT!  Don't do them now.  When you type C-S you'll notice that "I-Search"appears as a prompt in the echo area.  This tells you that AMACS is in what iscalled an incremental search waiting for you to type the thing that you wantto search for.  <ESC> terminates the search.>>  Now type C-S to start a search.  SLOWLY, one letter at a time, type    the word "cursor", pausing after you type each character to notice    what happens to the cursor.>>  Type C-S to find the next occurrence of "cursor".>>  Now type <ESC> to terminate the search.Did you see what happened?  AMACS, in an incremental search, tries to go tothe occurrence of the string that you've typed in so far.  To go to the nextoccurrence of "cursor" just type C-S again.  If no occurrence exists AMACSbeeps and tells you that it is a failing search.  C-G would also terminatethe search.If you are in the middle of an incremental search and type <DELETE>, you'llnotice that the last character in the search string is erased and the searchbacks up to the last place of the search.  For instance, suppose you currentlyhave typed "cu" and you see that your cursor is at the first occurrence of"cu".  If you now type <DELETE> the "u" in the search line is erased, andyou'll be repositioned in the text to the occurrence of "c" where the searchtook you before you typed the "u".  This provides a useful means for backingup while you are searching.If you are in the middle of a search and you type a control character (otherthan C-S or C-R, which tell AMACS to search for the string), the search isterminated, and the command which you typed is executed.The C-S starts a search that looks for any occurrence of the search stringAFTER the current cursor position.  But what if you want to search forsomething earlier in the text?  To do this, type C-R for Reverse search. Everything that applies to C-S applies to C-R except the direction of thesearch is reversed.GETTING MORE HELP-----------------In this tutorial we have tried to supply just enough information to get youstarted using AMACS.  There is so much available in AMACS that it would beimpossible to explain it all here.  However, you may want to learn more aboutAMACS since it has numerous desirable features that you don't know about yet.AMACS has a great deal of internal documentation.  All of these commands canbe accessed through the <HELP> character.  You can type the <HELP> characteras C-_ (Control-Underscore).To use the HELP features, type C-_, and then a character saying what kind ofhelp you want.  If you are REALLY lost, type <HELP> ? and AMACS will tell youwhat kinds of help it can give.  If you have typed the <HELP> character anddecide you don't want any help, just type C-G to get back to editing.The most basic HELP feature is <HELP> C.  Type <HELP>, a C, and a commandcharacter, and AMACS prints a description of the command.  When you arefinished reading it, type a Space or a C-G (quit) to bring your text back onthe screen.>>  Type <HELP> C Control-P.  When you are finished reading the typeout,    type a Space.  The message should be similar to:   Control-P runs the function Up Real Line; move up to the previous line.The name of the function is important for people who are customizing AMACS. It is what appears in the AMACS CHART as the documentation for the commandcharacter.Here are some other useful <HELP> options:    <HELP> D	Describe a function.  You type in the name of the function.		To see your text again when it is done, type a Space or C-G.>>  Try typing <HELP> D des<ESC><RETURN>.  Then type a Space when you are    finished reading it.    <HELP> A	Apropos.  Type in a keyword and AMACS will list all of the		functions whose names, or documentation contain that keyword.		For some functions it will also list a one or two character		command which has the same effect.>>  Type <HELP> A file<RETURN>.  You will see a list of all functions (M-X    commands) that deal with files.  You will also see commands like C-X C-V    and C-X C-S, listed under the corresponding function names.  When it says    "--More--" at the bottom of the screen, type a Space to see the rest of    the list.CONCLUSION----------This tutorial is meant to be understandable to all readers, so if you foundsomething unclear, don't sit there and blame yourself - complain!  (Nicely ofcourse, but we do value your opinion.)Remember, type Control-Apple-Z to exit.